{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/SEIRPanel.svelte",
    "../src/Chart.svelte",
    "../src/SEIR.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n  import { format } from 'd3-format'\n  import Checkbox from './Checkbox.svelte';\n  import Arrow from './Arrow.svelte';\n\n  export let Iters;\n  export let N;\n  export let colors;\n  export let active_;\n  export let checked;\n  export let indexToTime;\n  export let get_d;\n\n  export let mobile = false\n\n  function formatnumber(num) {\n    if (num < 1/1000) {\n      return \"0\"\n    }\n    if (num < 1) {\n      return Math.round(num*1000)\n    }\n    return format(\",.2s\")(num*1000)\n  }  \n\n  function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n  }\n\n</script>\n\n<style>\n\n.legendblue {\n  color:rgb(71, 129, 255);\n  font-size:13px;\n  margin-bottom: 2px;\n  font-weight: 600;\n  font-family: Pangram,Avenir,Helvetica,sans-serif;\n  text-transform: uppercase;\n}\n\n.grid-container {\n  display: grid;\n  grid-template-columns: 45% 30px 39%;\n  grid-template-areas:\n    'x11   x12   x13'\n    'line1 line1 line1'\n    'x21   x22   x23'\n    'line2 line2 line2'\n    'x31   x32   x33'\n    'line3 line3 line3'\n    'x41   x42   x43';\n  grid-gap: 5px;\n  position: relative;\n}\n\n.grid-container-mobile {\n  display: grid;\n  grid-template-columns: 43% 30px 41%;\n  grid-template-areas:\n    'x11   x12   x13'\n    'line1 line1 line1'\n    'x21   x22   x23'\n    'line2 line2 line2'\n    'x31   x32   x33'\n    'line3 line3 line3'\n    'x41   x42   x43';\n  grid-gap: 5px;\n  position: relative;\n}\n\n.x11, .x21, .x31, .x41 {\n  text-align: right;\n  padding: 0px;\n}\n.x12, .x22, .x32, .x42{\n  text-align: right;\n  margin-left: 5px;\n  margin-right: 5px;\n}\n.x13, .x23, .x33, .x43 {\n  text-align: left;\n  padding: 0px;\n}\n\n.line {\n  margin-top: 0px;\n  margin-bottom: 3px;\n  border-bottom: 1px solid rgb(200,200,200);\n}  \n\n\n.title{\n  color:white; \n  font-size:16px;\n  padding-bottom: 5px;\n  font-weight: 300;\n  font-family: Pangram,Avenir,Helvetica,sans-serif;\n  line-height: 13px;\n}\n\n\n.legendtext{\n  color:#888; \n  font-size:13px;\n  padding-bottom: 0px;\n  font-weight: 300;\n  font-family: Pangram,Avenir,Helvetica,sans-serif;\n  line-height: 15px;\n}\n\n.legendtitle {\n  color:rgb(66,66,66); \n  font-size:13px;\n  margin-bottom: 2px;\n  font-weight: 600;\n  font-family: Pangram,Avenir,Helvetica,sans-serif;\n  text-transform: uppercase;\n}\n\n\n.legendtitle {\n  color:rgb(66,66,66); \n  font-size:13px;\n  margin-bottom: 2px;\n  font-weight: 600;\n  font-family: Pangram,Avenir,Helvetica,sans-serif;\n  text-transform: uppercase;\n}\n\n\n.legendtextnum{\n  color:#888; \n  font-size:13px;\n  padding-bottom: 6px;\n  font-weight: 300;\n  line-height: 12px;\n  font-family: Pangram,Avenir,Helvetica,sans-serif;\n  left: -3px;\n  position: relative;\n}\n\n</style>\n\n{#if !mobile}\n<div class=\"title\" style=\"margin: auto; width:100%; margin-right: 20px; border-radius: 20px; padding: 4px; padding-top:7px; line-height:14px; font-weight: bold; text-align: center; background-color: rgb(82, 132, 247); margin-bottom: 20px\">DAY {Math.round(indexToTime(active_))}</div>\n{:else}\n<div class=\"title\" style=\"margin: auto; margin-top: 5px; width:93%; border-radius: 3px; padding: 4px; padding-top:7px; line-height:14px; font-weight: bold; text-align: center; background-color: rgb(82, 132, 247); margin-bottom: 10px\">DAY {Math.round(indexToTime(active_))}</div>\n{/if}\n\n<div class=\"{mobile ? 'grid-container-mobile': 'grid-container'}\" style=\"width:100%;\">\n\n  <div class=\"x11\" style=\"grid-area: x11;\">\n    <div class=\"legendtitle\">Susceptible</div>\n    {#if !mobile}\n      <div class=\"legendtext\">Population not immune to the virus</div>\n    {:else}\n      <div class=\"legendtext\">Population not immune</div>\n    {/if}\n  </div>\n  <div class=\"x12\" style=\"grid-area: x12;\">\n    <span style=\"\"><Checkbox color=\"#CCC\"/></span>\n  </div>\n  <div class=\"x13\" style=\"position: relative; grid-area: x13\">\n    <div style=\"padding-top: 2px; padding-bottom: 1px\">\n      <div class=\"legendtextnum\"> <span class=\"legendtitle\"><b>{formatnumber(N*Iters[active_][0]/1000)}</b></span>\n                              ({ format(\".3r\")(100*Iters[active_][0]) }%)</div>\n      <div class=\"legendtextnum\"> <span class=\"legendblue\">{formatNumber(Math.round(N*get_d(active_)[0]))}</span> per day </div>\n      <div style=\"position: absolute; top: 19px\">\n        <Arrow height=\"25\"/>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"line\" style=\"grid-area: line1;\"></div>\n\n  <div class=\"x21\">\n    <div class=\"legendtitle\">Exposed</div>\n    {#if !mobile}\n      <div class=\"legendtext\">Population incubating the virus</div>\n    {:else}\n      <div class=\"legendtext\">Incubating the virus</div>\n    {/if}\n  </div>\n  <div class=\"x22\">\n    <span style=\"\"><Checkbox color=\"{colors[4]}\" bind:checked={checked[4]}/></span>\n  </div>\n  <div class=\"x23\">\n    <div style=\"position: relative; padding-top: 2px; padding-bottom: 1px\">\n      <div class=\"legendtextnum\"> <span class=\"legendtitle\"><b>{formatnumber(N*Iters[active_][1]/1000)}</b></span>\n                              ({ format(\".1%\")(Iters[active_][1]) })</div>\n      <div class=\"legendtextnum\"> <span class=\"legendblue\">{formatNumber(Math.round(N*get_d(active_)[1])) }</span> per day\n                             </div>\n      <div style=\"position: absolute; top: 19px\">\n        <Arrow height=\"25\"/>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"line\" style=\"grid-area: line2;\"></div>\n\n  <div class=\"x31\">\n    <div class=\"legendtitle\">Infectious</div>\n    {#if !mobile}\n      <div class=\"legendtext\">Population that can transmit the virus</div>\n    {/if}\n\n  </div>\n  <div class=\"x32\">\n    <span style=\"\"><Checkbox color=\"{colors[3]}\" bind:checked={checked[3]}/></span>\n  </div>\n  <div class=\"x33\">\n    <div style=\"position: relative; padding-top: 2px; padding-bottom: 1px\">\n      <div class=\"legendtextnum\"> <span class=\"legendtitle\"><b>{formatnumber(N*Iters[active_][2]/1000)}</b></span>\n                              ({ (100*Iters[active_][2]).toFixed(2) }%)</div>\n      <div class=\"legendtextnum\"> <span class=\"legendblue\">{formatNumber(Math.round(N*get_d(active_)[2])) }</span> per day\n                             </div>\n    </div>\n  </div>\n\n  <div class=\"line\" style=\"grid-area: line3;\"></div>\n\n  <div class=\"x31\">\n    <div class=\"legendtitle\">Fatalities</div>\n  </div>\n  <div class=\"x32\">\n    <span style=\"\"><Checkbox color=\"{colors[0]}\" bind:checked={checked[0]}/></span>\n  </div>\n  <div class=\"x33\">\n    <div style=\"padding-top: 2px; padding-bottom: 1px\">\n      <div class=\"legendtextnum\"> <span class=\"legendtitle\"><b>{formatnumber(N*Iters[active_][9]/1000)} </b></span>\n                              ({ (100*Iters[active_][9]).toFixed(2) }%)</div>\n      <div class=\"legendtextnum\"> <span class=\"legendblue\">{formatNumber(Math.round(N*get_d(active_)[9])) }</span> per day\n                             </div>\n    </div>\n  </div>\n\n</div>",
    "<script>\n  import { scaleLinear, scaleLog } from 'd3-scale';\n  import { drag } from 'd3-drag';\n  import { selectAll } from 'd3-selection'\n  import { onMount } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  function range(n){\n    return Array(n).fill().map((_, i) => i);\n  }\n\n  $: showTip = function (i) {\n    active_hover = i\n  }\n\n  function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n  }\n\n  var sum = function(arr, bools){\n    var x = 0\n    for (var i = 0; i < arr.length; i++) {\n      x = x + arr[i]*(bools[i] ? 1 : 0)\n    }\n    return x\n  }\n\n  export let y;\n  export let tmax;\n  export let xmax; \n  export let deaths;\n  export let total;\n  export let vline;\n  export let timestep;\n  export let total_infected;\n  export let N;\n  export let ymax;\n  export let InterventionTime;\n  export let colors; \n  export let log = false;\n  export let displayday = true;\n\n  const padding = { top: 20, right: 0, bottom: 20, left: 25 };\n\n  export let width  = 750;\n  export let height = 420;\n\n  $: xScale = scaleLinear()\n    .domain([0, y.length])\n    .range([padding.left, width - padding.right]);\n\n  $: xScaleTime = scaleLinear()\n    .domain([0, tmax])\n    .range([padding.left, width - padding.right]);\n\n  $: indexToTime = scaleLinear()\n    .domain([0, y.length])\n    .range([0, tmax])\n\n  $: timeToIndex = scaleLinear()\n    .domain([0, tmax])\n    .range([0, y.length])\n\n  $: yScale = (log ? scaleLog(): scaleLinear())\n    .domain([log ? 1: 0,  ymax/1])\n    .range([height - padding.bottom, padding.top]);\n\n  $: yScaleL = scaleLog()\n    .domain([1,  ymax/1])\n    .range([0, height - padding.bottom - padding.top]);\n\n  export let space = 1.5\n  $: innerWidth = width - (padding.left + padding.right);\n  $: barWidth = innerWidth / y.length - space;\n  $: active_hover = -1\n  $: lock = false\n  var active_lock = 0\n\n  $: active = (function () {\n    if (lock){\n      var i = Math.round(timeToIndex(active_lock))\n      if (i > 99) {\n        lock = false\n        i = 0\n      } else {\n        return i\n      }\n    } else {\n      return active_hover\n    }\n  })()\n  export let active;\n  export let checked;\n\n  // var data = [[2   , 2  ], [5   , 2  ], [18  , 4  ], [28  , 6  ], [43  , 8  ], [61  , 12 ], [95  , 16 ], [139 , 19 ], [245 , 26 ], [388 , 34 ], [593 , 43 ], [978 , 54 ], [1501, 66 ], [2336, 77 ], [2922, 92 ], [3513, 107], [4747, 124]]\n  var data = []\n</script>\n\n<style>\n  h2 {\n    text-align: center;\n    font-size: 30px;\n    font-weight: 300;\n    font-family: nyt-franklin,arial,helvetica,sans-serif;\n    font-style: normal; \n  }\n\n  .chart {\n    width: 100%;\n    max-width: 800px;\n    margin: 0 auto;\n    padding-top:30px;\n    padding-bottom:10px;\n  }\n\n  svg {\n    position: relative;\n    width: 100%;\n    height: 450px;\n  }\n\n  .tick {\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  .tick line {\n    stroke: #e2e2e2;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: #aaa;\n    text-anchor: start;\n  }\n\n  .tick.tick-0 line {\n    stroke-dasharray: 0;\n  }\n\n  .intervention line {\n    stroke: #555;\n    stroke-dasharray: 0;\n    stroke-width:12.5;\n  }\n\n\n  .x-axis .tick text {\n    text-anchor: middle;\n  }\n\n  .bar {\n    stroke: none;\n    opacity: 0.65\n  }\n\n  .total {\n    color: #888;\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n\n  a.tip span:before{\n      content:'';\n      display:block;\n      width:0;\n      height:0;\n      position:absolute;\n\n      border-top: 8px solid transparent;\n      border-bottom: 8px solid transparent;\n      border-right:8px solid black;\n      left:-8px;\n\n      top:7px;\n  }\n\n</style>\n\n<div style=\"width:{width+15}px; height: {height}px; position: relative; top:20px\">\n  <svg style=\"position:absolute; height: {height}px\">\n\n    <!-- y axis -->\n    <g class=\"axis y-axis\" transform=\"translate(0,{padding.top})\">\n      {#each yScale.ticks(5) as tick}\n        <g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - padding.bottom})\">\n          <line x2=\"100%\"></line>\n          <text y=\"-4\">{Number.isInteger(Math.log10(tick)) ? formatNumber(tick) : (log ? \"\": formatNumber(tick))}{ (tick == yScale.ticks(5)[0]) ? \" \": \"\"}</text>\n        </g>\n      {/each}\n    </g>\n\n    <!-- x axis -->\n    <g class=\"axis x-axis\">\n      {#each xScaleTime.ticks() as i}\n        <g class=\"tick\" transform=\"translate({xScaleTime(i)},{height})\">\n          <text x=\"0\" y=\"-4\">{i == 0 ? \"Day \":\"\"}{i}</text>\n        </g>\n      {/each}\n    </g>\n\n    <g class='bars'>\n      {#each range(y.length) as i}\n        <rect\n          on:mouseover={() => showTip(i)}\n          on:mouseout={() => showTip(-1)}\n          on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\n          class=\"bar\"\n          x=\"{xScale(i) + 2}\"\n          y=\"{0}\"\n          width=\"{barWidth+3}\"\n          height=\"{height}\"\n          style=\"fill:white; opacity: 0\">     \n        </rect>\n\n        {#each range(colors.length) as j}\n          {#if !log}\n              <rect\n                on:mouseover={() => showTip(i)}\n                on:mouseout={() => showTip(-1)}\n                on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\n                class=\"bar\"\n                x=\"{xScale(i) + 2}\"\n                y=\"{yScale( sum(y[i].slice(0,j+1), checked) )}\"\n                width=\"{barWidth}\"\n                height=\"{Math.max(height - padding.bottom - yScale(y[i][j]*checked[j] ),0)}\" \n                style=\"fill:{colors[j]};\n                       opacity:{active == i ? 0.9: 0.6}\">     \n              </rect>\n          {:else}\n              <rect\n                on:mouseover={() => showTip(i)}\n                on:mouseout={() => showTip(-1)}\n                on:click={() => {lock = !lock; active_lock = indexToTime(i) }}\n                class=\"bar\"\n                x=\"{xScale(i) + 2}\"\n                y=\"{(function () { \n                        var z = yScale( sum(y[i].slice(0,j+1), checked) ); \n                        return Math.min(isNaN(z) ? 0: z, height - padding.top)\n                      })()  \n                    }\"\n                width=\"{barWidth}\"\n                height=\"{(function () {\n                  var top = yScaleL( sum(y[i].slice(0,j+1),checked) + 0.0001 )\n                  var btm = yScaleL( sum(y[i].slice(0,j),checked) + 0.0001)\n                  var z = top - btm; \n                  if (z + yScale( sum(y[i].slice(0,j+1), checked) ) > height - padding.top) {\n                    return top\n                  } else {\n                    return Math.max(isNaN(z) ? 0 : z,0)\n                  }})()}\" \n                style=\"fill:{colors[j]};\n                       opacity:{active == i ? 0.9: 0.6}\">     \n              </rect>\n          {/if}\n        {/each}\n\n      {/each}\n    </g>\n\n<!-- height=\"{Math.max(height - padding.bottom - yScale(y[i][j]*checked[j] ),0)}\" -->\n\n    <g class='bars'>\n      {#each range(data.length) as i}\n        <rect\n          class=\"bar\"\n          x=\"{xScale( i+28 ) + 2}\"\n          y=\"{yScale( data[i][1] )}\"\n          width=\"{barWidth}\"\n          height=\"{height - padding.bottom - yScale( data[i][1] )}\"\n          style=\"fill:black; \n                 opacity: 0.5;\n                 box-shadow: 4px 10px 5px 2px rgba(0,0,0,0.75);\">     \n        </rect>\n      {/each}\n    </g>\n\n  </svg> \n\n  <div style=\"position: absolute;width:{width+15}px; height: {height}px; position: absolute; top:0px; left:0px; pointer-events: none\">\n    \n    {#if active >= 0}\n      <div style=\"position:absolute; \n                  pointer-events: none;\n                  width:100px;\n                  left:{xScale(active)}px;\n                  top:{Math.max(yScale(sum(y[active], checked)),0) }px\" class=\"tip\"> \n          <!-- {#if lock} <div style=\"position:absolute; top:-35px; left:-3.5px; font-family: Source Code Pro\">🔒</div> {/if} -->\n          <svg style=\"position:absolute; top:-12px; left:0px\" height=\"10\" width=\"10\">\n          <path \n            d=\"M 0 0 L 10 0 L 5 10 z\"\n            fill=\"{lock ? '#222':'#555'}\" \n            stroke-width=\"3\" />\n          </svg>\n          {#if displayday}\n          <div style=\"background-color: rgb(82, 132, 247); text-align: center; width: 50px; position: absolute; top: -31px; left: -22px; padding: 2px; font-family: Pangram,Avenir,Helvetica,sans-serif; color: white; font-size: 10px; border-radius: 10px\">DAY { Math.round(indexToTime(active)) }</div>\n          {/if}\n      </div>\n    {/if}\n\n  </div>\n\n</div>\n",
    "<script>\n   \n  import Chart from './Chart.svelte';\n  import Control from './Control.svelte';\n  import SEIRPanel from './SEIRPanel.svelte';\n  import Selector from './Selector.svelte';\n  import Slider from './Slider.svelte'\n\n  import { scaleLinear } from \"d3-scale\";\n  // import { Date } from \"d3-time\"\n  import { onMount } from 'svelte';\n  import { selectAll } from 'd3-selection'\n  import { drag } from 'd3-drag';\n  import queryString from \"query-string\";\n  import { format } from 'd3-format'\n  import { event } from 'd3-selection'\n  import katex from 'katex';\n\n  $: screenWidth = 0\n  $: screenHeight = 0\n\n  var sum = function(arr, bools){\n    var x = 0\n    for (var i = 0; i < arr.length; i++) {\n      x = x + arr[i]*(bools[i] ? 1 : 0)\n    }\n    return x\n  }\n\n  function max(P, checked) {\n    return P.reduce((max, b) => Math.max(max, sum(b, checked) ), sum(P[0], checked) )\n  }\n\n  export let Sol;\n  export let OMInterventionAmt;\n  export let InterventionTime = 100\n  export let N;\n  export let checked;\n\n  $: P              = Sol[\"P\"].slice(0,100)\n  $: timestep       = Sol[\"dt\"]\n  $: tmax           = Sol[\"dt\"]*100\n  $: deaths         = Sol[\"deaths\"]\n  $: total          = Sol[\"total\"]\n  $: total_infected = Sol[\"total_infected\"].slice(0,100)\n  $: Iters          = Sol[\"Iters\"]\n  $: dIters         = Sol[\"dIters\"]\n  $: Pmax           = max(P, checked)\n  $: lock           = false\n  $: Xmax           = 110000\n\n  export let colors;\n  export let mobile\n\n  var Plock = 1\n\n  var drag_y = function (){\n    var dragstarty = 0\n    var Pmaxstart = 0\n\n    var dragstarted = function (d) {\n      dragstarty = event.y  \n      Pmaxstart  = Pmax\n    }\n\n    var dragged = function (d) {\n      Pmax = Math.max( (Pmaxstart*(1 + (event.y - dragstarty)/500)), 10)\n    }\n\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted)\n  }\n\n  var drag_x = function (){\n    var dragstartx = 0\n    var dtstart = 0\n    var Pmaxstart = 0\n    var dragstarted = function (d) {\n      dragstartx = event.x\n      dtstart  = dt\n      Plock = Pmax\n      lock = true\n    }\n    var dragged = function (d) {\n      dt = dtstart - 0.0015*(event.x - dragstartx)\n    }\n    var dragend = function (d) {\n      lock = false\n    }\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\n  }\n\n  var drag_intervention = function (){\n    var dragstarty = 0\n    var InterventionTimeStart = 0\n\n    var dragstarted = function (d) {\n      dragstarty = event.x  \n      InterventionTimeStart = InterventionTime\n      Plock = Pmax\n      lock = true\n    }\n\n    var dragged = function (d) {\n      // InterventionTime = Math.max( (*(1 + (event.x - dragstarty)/500)), 10)\n      // console.log(event.x)\n      InterventionTime = Math.min(tmax-1, Math.max(0, InterventionTimeStart + xScaleTimeInv(event.x - dragstarty)))\n    }\n\n    var dragend = function (d) {\n      lock = false\n    }\n\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\n  }\n\n  var drag_intervention_end = function (){\n    var dragstarty = 0\n    var durationStart = 0\n\n    var dragstarted = function (d) {\n      dragstarty = event.x  \n      durationStart = duration\n      Plock = Pmax\n      lock = true\n    }\n\n    var dragged = function (d) {\n      // InterventionTime = Math.max( (*(1 + (event.x - dragstarty)/500)), 10)\n      // console.log(event.x)\n      duration = Math.min(tmax-1, Math.max(0, durationStart + xScaleTimeInv(event.x - dragstarty)))\n    }\n\n    var dragend = function (d) {\n      lock = false\n    }\n\n    return drag().on(\"drag\", dragged).on(\"start\", dragstarted).on(\"end\", dragend)\n  }\n\n  function draggycallbacks() {\n    var drag_callback_y = drag_y()\n    drag_callback_y(selectAll(\"#yAxisDrag\"))\n    var drag_callback_x = drag_x()\n    drag_callback_x(selectAll(\"#xAxisDrag\"))\n    var drag_callback_intervention = drag_intervention()\n    // drag_callback_intervention(selectAll(\"#interventionDrag\"))\n    drag_callback_intervention(selectAll(\"#dottedline\"))\n    // var drag_callback_intervention_end = drag_intervention_end()\n    // drag_callback_intervention_end(selectAll(\"#dottedline2\"))\n  }\n\n  $: parsed = \"\";\n  onMount(async () => {\n\n    if (typeof window !== 'undefined') {\n      \n      draggycallbacks()\n\n      parsed = queryString.parse(window.location.search)\n      if (!(parsed.logN === undefined)) {logN = parsed.logN}\n      if (!(parsed.I0 === undefined)) {I0 = parseFloat(parsed.I0)}\n      if (!(parsed.R0 === undefined)) {R0 = parseFloat(parsed.R0)}\n      if (!(parsed.D_incbation === undefined)) {D_incbation = parseFloat(parsed.D_incbation)}\n      if (!(parsed.D_infectious === undefined)) {D_infectious = parseFloat(parsed.D_infectious)}\n      if (!(parsed.D_recovery_mild === undefined)) {D_recovery_mild = parseFloat(parsed.D_recovery_mild)}\n      if (!(parsed.D_recovery_severe === undefined)) {D_recovery_severe = parseFloat(parsed.D_recovery_severe)}\n      if (!(parsed.CFR === undefined)) {CFR = parseFloat(parsed.CFR)}\n      if (!(parsed.InterventionTime === undefined)) {InterventionTime = parseFloat(parsed.InterventionTime)}\n      if (!(parsed.InterventionAmt === undefined)) {InterventionAmt = parseFloat(parsed.InterventionAmt)}\n      if (!(parsed.D_hospital_lag === undefined)) {D_hospital_lag = parseFloat(parsed.D_hospital_lag)}\n      if (!(parsed.P_SEVERE === undefined)) {P_SEVERE = parseFloat(parsed.P_SEVERE)}\n      if (!(parsed.Time_to_death === undefined)) {Time_to_death = parseFloat(parsed.Time_to_death)}\n\n    }\n  });\n\n  function lock_yaxis(){\n    Plock = Pmax\n    lock  = true\n  }\n\n  function unlock_yaxis(){\n    lock = false\n  }\n\n  const padding = { top: 20, right: 0, bottom: 20, left: 25 };\n\n  export let width  = 680;\n  export let height = 490;\n\n  $: xScaleTime = scaleLinear()\n    .domain([0, tmax])\n    .range([padding.left, width - padding.right]);\n\n  $: xScaleTimeInv = scaleLinear()\n    .domain([0, width])\n    .range([0, tmax]);\n\n  window.addEventListener('mouseup', unlock_yaxis);\n\n  export let active  = 0\n  $: p_num_ind = 40\n\n  $: log = true\n\n</script>\n\n<style>\n  .small { font: italic 6px Source Code Pro; }\n  @import url('https://fonts.googleapis.com/css?family=Source+Code+Pro&display=swap');\n\n  .caption {\n    font-family: Pangram,Avenir,Helvetica,sans-serif;\n    font-size: 13px;    \n  }\n\n  .paneltext{\n    position:relative;\n    height:130px;\n  }\n\n  .paneltitle{\n    color:#777; \n    line-height: 17px; \n    padding-bottom: 4px;\n    font-weight: 700;\n    font-family: Pangram,Avenir,Helvetica,sans-serif;\n  }\n\n  .paneldesc{\n    color:#888; \n    text-align: left;\n    font-weight: 300;\n  }\n    \n  .range {\n    width: 100%;\n    padding: 0px;\n    margin: 0px;\n    margin-bottom: 0px;\n  }\n\n  .legend {\n    color: #888;\n    font-family: Helvetica, Arial;\n    font-size: .725em;\n    font-weight: 200;\n    height: 100px;\n    left: 20px;\n    top: 4px;\n    position: absolute;\n  }\n\n  .legendtitle {\n    color:rgb(66,66,66); \n    font-size:13px;\n    margin-bottom: 2px;\n    font-weight: 600;\n    font-family: Pangram,Avenir,Helvetica,sans-serif;\n    text-transform: uppercase;\n  }\n\n  .legendtext{\n    color:#888; \n    font-size:13px;\n    padding-bottom: 6px;\n    font-weight: 300;\n    font-family: Pangram,Avenir,Helvetica,sans-serif;\n    line-height: 15px;\n  }\n\n  .tick {\n    font-family: Pangram,Avenir,Helvetica,sans-serif;\n    font-size: .725em;\n    font-weight: 200;\n    font-size: 13px\n  }\n\n  label {\n    padding-top: 10px;\n  }\n\n  a:link { color: grey; }\n  a:visited { color: grey; }\n\n  .draggy:after {\n      content:'';\n      position: absolute;\n      top: 98.5%;\n      left: 50%;\n      margin-left: -3px;\n      width: 0;\n      height: 0;\n      border-top: solid 8px white;\n      border-left: solid 8px transparent;\n      border-right: solid 8px transparent;\n  }\n\n  .draggy2:after {\n      content:'';\n      position: absolute;\n      top: 83%;\n      left: 50%;\n      margin-left: -3px;\n      width: 0;\n      height: 0;\n      border-top: solid 8px rgb(200,200,200);\n      border-left: solid 8px transparent;\n      border-right: solid 8px transparent;\n  }\n\n  .draggymobile:after {\n      content:'';\n      position: absolute;\n      top: 98%;\n      left: 50%;\n      margin-left: -3px;\n      width: 0;\n      height: 0;\n      border-top: solid 6px white;\n      border-left: solid 6px transparent;\n      border-right: solid 6px transparent;\n  }\n\n  .draggymobile2:after {\n      content:'';\n      position: absolute;\n      top: 113.5%;\n      left: 50%;\n      margin-left: -3px;\n      width: 0;\n      height: 0;\n      border-top: solid 6px rgb(200,200,200);\n      border-left: solid 6px transparent;\n      border-right: solid 6px transparent;\n  }\n\n</style>\n\n<div style=\"position:relative; top:{mobile ? 60: 122}px; left: 25px; height: {mobile ? height+35: height+105}px\">\n\n  <Chart bind:checked={checked}\n         bind:active={active}\n         y = {P} \n         xmax = {Xmax} \n         total_infected = {total_infected} \n         deaths = {deaths} \n         total = {total} \n         timestep={timestep}\n         tmax={tmax}\n         N={N}\n         ymax={lock ? Plock: Pmax}\n         InterventionTime={InterventionTime}\n         colors={colors}\n         log={!log}\n         width={width}\n         space={mobile ? 0.5 : 1.5}\n         displayday={mobile ? false : true}\n         height={height-50}/>\n  </div>\n\n  {#if !mobile}\n\n    <!-- Intervention Line -->\n    <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:100px; left:25px; pointer-events: none\">\n      <div id=\"dottedline\"  style=\"pointer-events: all;\n                  position: absolute;\n                  top:-40px;\n                  left:{xScaleTime(InterventionTime)}px;\n                  visibility: {(xScaleTime(InterventionTime) < (width - padding.right)) ? 'visible':'hidden'};\n                  width:2px;\n                  pointer-events: all;\n                  cursor:col-resize;\n                  height:{height+19}px\">\n\n      <div style=\"width:150px; \n                  position:relative; \n                  top:-65px; \n                  left: -80px; \n                  height: 140px; \n                  padding-right: 15px; \n                  cursor:col-resize; \n                  position:absolute;\" >\n      </div>\n\n      </div>\n    </div>\n\n    <!-- Intervention Line slider -->\n    <div style=\"position: absolute; width:{width+15}px; height: {height + 30}px; position: absolute; top:150px; left:25px; pointer-events: none\">\n      <div style=\"\n          position: absolute;\n          top:0px;\n          left:{xScaleTime(InterventionTime)}px;\n          visibility: {(xScaleTime(InterventionTime) < (width - padding.right)) ? 'visible':'hidden'};\n          width:2px;\n          background-color:rgb(255, 255, 255, 0.5);\n          border-right: 1px dashed rgb(0,0,0, 0.5);\n          cursor:col-resize;\n          height:{height-79}px\">\n          <div style=\"position:relative; top:-225px; left: -102px;\" >\n            <div class=\"caption draggy\" style=\"pointer-events: none; \n                                        width: 180px; \n                                        position: absolute; \n                                        left:0; \n                                        top:90px; \n                                        height: 105px;\n                                        padding: 5px 7px 7px 7px; \n                                        box-shadow: 0px 0px 5px rgb(0,0,0,0.1);\n                                        background-color: white;\n                                        border: 1px solid rgb(200,200,200);\n                                        border-radius: 3px;\">\n              <div class=\"paneldesc\"  style=\"position: absolute; text-align: center; width: 100px; left: 47px; top: -20px\"> ← Drag →</div>  \n              <div class=\"paneltext draggy2\"  style=\"text-align: center;\">\n                <div class=\"paneltitle\" style=\"margin-top: 5px; padding-bottom:5px; margin-bottom: 5px; border-bottom: 2px dotted grey\">Day of intervention: <span style=\"color:red\">{format(\"d\")(InterventionTime)}</span></div>                \n                <div class=\"paneldesc\" style=\"text-align:center; margin-bottom: 3px\">Intervention decreases transmission by <br> {100*OMInterventionAmt.toFixed(2)}%<br></div>\n                <div style=\"pointer-events: all\">\n                  <Slider bind:value={OMInterventionAmt} min=0 max=1 step=0.01 mousedown={lock_yaxis}/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n    </div>\n  {:else}\n\n    <!-- Intervention Line -->\n    <div style=\"position: absolute; width:{width+15}px; height: {height}px; position: absolute; top:80px; left:25px; pointer-events: none;\">\n      <div id=\"dottedline\"  style=\"pointer-events: all;\n                  position: absolute;\n                  top:-20px;\n                  left:{xScaleTime(InterventionTime)}px;\n                  visibility: {(xScaleTime(InterventionTime) < (width - padding.right)) ? 'visible':'hidden'};\n                  width:2px;\n                  pointer-events: all;\n                   /*background-color: black;*/\n                  cursor:col-resize;\n                  height:{height+19}px\">\n\n      <div style=\"width:150px; \n                  position:relative; \n                  /*background-color: black;*/\n                  top:-65px; \n                  left: -80px; \n                  height: 90px;\n                  padding-right: 15px; \n                  cursor:col-resize; \n                  position:absolute;\" >\n      </div>\n\n      </div>\n    </div>\n\n    <!-- Intervention Line slider -->\n    <div style=\"position: absolute; width:{width+15}px; height: {height + 30}px; position: absolute; top:35px; left:25px; pointer-events: none\">\n      <div style=\"\n          position: absolute;\n          top:30px;\n          left:{xScaleTime(InterventionTime)}px;\n          visibility: {(xScaleTime(InterventionTime) < (width - padding.right)) ? 'visible':'hidden'};\n          width:2px;\n          background-color:rgb(255, 255, 255, 0.5);\n          border-right: 1px dashed rgb(0,0,0, 0.5);\n          cursor:col-resize;\n          height:{height-55}px\">\n          <div style=\"position:relative; top:-35px; left: {-102+56.5}px;\" >\n            <div class=\"caption draggymobile\" style=\"pointer-events: none; \n                                        width: 74px; \n                                        position: absolute; \n                                        left:0; \n                                        top:-10px; \n                                        height: 42px;\n                                        padding: 5px 7px 7px 7px; \n                                        background-color: white;\n                                        border: 1px solid rgb(200,200,200);\n                                        border-radius: 3px;\">\n              <div class=\"paneldesc\"  style=\"position: absolute; font-size: 10px; text-align: center; width: 100px; left: -7px; top: -15px\"> ← Drag →</div>  \n              <div class=\"draggymobile2\" style=\"text-align: center; line-height: 14px; padding: 0px; margin: 0px; color: black; top: -2px; position: relative; font-size: 12px\">\n                Day of Intervention* <div style=\"font-weight:bold; color:red; font-size:15px; margin-top: 4px\">{format(\"d\")(InterventionTime)}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n    </div>\n\n  {/if}\n\n\n\n"
  ],
  "names": [],
  "mappings": "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"
}